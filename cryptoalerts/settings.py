"""
Django settings for cryptoalerts project.

Generated by 'django-admin startproject' using Django 5.0.7.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path
import os
from datetime import timedelta

# Check if the deployment is production or development
IS_PROD = os.environ.get("IS_PROD_DEPLOYMENT", False)

if IS_PROD == "TRUE" or IS_PROD == "True":
    IS_PROD = True
else:
    IS_PROD = False

if IS_PROD:
    print("---- PRODUCTION DEPLOYMENT ----")
else:
    print("---- DEVELOPMENT DEPLOYMENT ----")

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# Debug is enabled if the deployment is not production and env variables are loaded from .env file for easy development
if IS_PROD:
    DEBUG = False
    from dotenv import load_dotenv
    load_dotenv()
else:
    DEBUG = True
    from dotenv import load_dotenv
    load_dotenv()

# Secret Key needs to be set in the environment variables
SECRET_KEY = os.environ.get("DJANGO_SECRET_KEY")

if IS_PROD:
    ALLOWED_HOSTS = ["*"]
else:
    ALLOWED_HOSTS = ["*"]

if DEBUG:
    INTERNAL_IPS = [
    "127.0.0.1",
    ]

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'alertservice',
    'rest_framework',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'cryptoalerts.urls'

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [os.path.join(BASE_DIR, "templates")],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = 'cryptoalerts.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases


db_user = os.environ.get("POSTGRES_DB_USER")
db_name = os.environ.get("POSTGRES_DB_NAME")
db_password = os.environ.get("POSTGRES_DB_PASSWORD")
db_host = os.environ.get("POSTGRES_DB_HOST")
db_port = os.environ.get("POSTGRES_DB_POST")
DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.postgresql",
        "NAME": db_name,
        "USER": db_user,
        "PASSWORD": db_password,
        "HOST": db_host,
        "PORT": db_port,
    }
}

# Cache
CACHE_LOCATION = os.environ.get(
    "REDIS_URL", "redis://localhost:6379"
)
CACHES = {
    "default": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": CACHE_LOCATION,
    }
}

# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
        "OPTIONS": {
            "min_length": 8,
        },
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True

# HTTPS Related Security Settings
if IS_PROD:
    CSRF_COOKIE_SECURE = True
    SESSION_COOKIE_SECURE = True
    SECURE_HSTS_SECONDS = 60
    SECURE_SSL_REDIRECT = True
    SECURE_HSTS_PRELOAD = True
    SECURE_HSTS_INCLUDE_SUBDOMAINS = True
    print("Production deployment, enabling HTTPS related settings")
else:
    print("Development deployment, disabling HTTPS related settings")

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = 'static/'

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ],
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated',
    ),
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 10
}

SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(days=7),
    'REFRESH_TOKEN_LIFETIME': timedelta(days=8)
}

# Celery settings
CELERY_BROKER_URL = os.environ.get(
    "REDIS_URL", "redis://localhost:6379/0"
)
CELERY_RESULT_URL = os.environ.get(
    "REDIS_URL", "redis://localhost:6379/0"
)
CELERY_CACHE_BACKEND = "django-cache"
CELERY_BROKER_POOL_LIMIT = 1
CELERY_BROKER_CONNECTION_RETRY_ON_STARTUP = True

# Email settings
EMAIL_BACKEND = "django.core.mail.backends.smtp.EmailBackend"
EMAIL_HOST = os.environ.get("EMAIL_HOST", None)
EMAIL_USE_TLS = True
EMAIL_PORT = os.environ.get("EMAIL_PORT", None)
EMAIL_USE_SSL = False
EMAIL_HOST_USER = os.environ.get("EMAIL_HOST_USER", None)
EMAIL_HOST_PASSWORD = os.environ.get("EMAIL_HOST_PASSWORD", None)
